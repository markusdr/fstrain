---------------------------------------------------------
fstrain -- Software for training finite-state transducers
---------------------------------------------------------

Markus Dreyer
02/2010

This implements training of finite-state transducers. See also [1].

[1] M. Dreyer, J.R. Smith, and J. Eisner: Latent-variable modeling of
    string transductions with finite-state methods.
    Proceedings of the 2008 Conference on Empirical Methods in 
    Natural Language Processing, 2008.

INSTALLATION
------------

* Extract tarball and set FSTRAIN_HOME variable:
tar -xzf fstrain-VERSION.tar.gz
cd fstrain-VERSION
export FSTRAIN_HOME=`pwd`

* Patch and make OpenFst:
cd $HOME/openfst-1.1
patch -p1 -i $FSTRAIN_HOME/openfst-1.1.patch 
(This fixes two minor bugs in OpenFst 1.1.)
./configure
make

* Install boost.

* Install R (will be used for L-BFGS and other optimization).

* Configure fstrain, using your OpenFst and boost directories
(optionally specify the path to your g++ v4.3 compiler), and make:

cd $FSTRAIN_HOME/build
../configure \
  --with-boost=$HOME/boost-1.38 \
  --with-openfst=$HOME/openfst-1.1 \
  CXXFLAGS="-O2 -fPIC" \
  CXX=/apps/gcc/gcc-4.3.3/bin/g++ 
make all

* Set LD_LIBRARY_PATH variable:
export LD_LIBRARY_PATH=$FSTRAIN_HOME/build:$HOME/openfst-1.1/src/lib/.libs:$HOME/boost-1.39/lib

* Test
cd ..
make test

* For Doxygen documentation, type
make doc

EXAMPLES
--------

For examples, see the test/ directory, e.g.
* test/core/Makefile
* test/train/Makefile
* test/create+train+decode/Makefile

TODO
----

This software currently supports only basic ngram features (no
target language model features, consonant/vowel features etc.) and no
latent conjugation classes or latent regions.

There is Doxygen documentation, but a tutorial-style write-up is still
missing, that would show how to train a CRF, how to compose models to
train factorial CRFs, how to use fstrain to do simple maxent
classification (with hidden variables) etc. 

The code in src/fstrain/create is not as clean as it should be and is
currently also not very configurable. It will be taken out of fstrain
in the future, and possiblt distributed separately. There are many
ways to construct and featurize (pruned) FSTs, and the user will often
have to build these in a problem-specific way. 


